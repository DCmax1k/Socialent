<div id="adminControls">
    <!-- Icon -->
    <i id="adminControlsKeyIcon" class="fas fa-key"></i>

    <!-- Top -->
    <div id="adminControlsTop">
        <h2>All users:</h2> <input type="text" placeholder="Search...">
    </div>
    
    <!-- Each user -->
    <% allUsers.forEach((subUser, i) => { %>
        <div class="subUser">
            <h3><%= i + 1 %>.</h3>
            <a href="https://socialent-app.herokuapp.com/account/<%= subUser.username %>?k=<%= user._id %>"><%= subUser.username %></a>
            <% if(subUser.rank != 'owner') {%>
            <div class="manage-btns">
                <div data-user-id="<%= subUser._id %>" class="promote-btn"><i class="fas fa-arrows-alt-v"></i></div>
                <div data-user-id="<%= subUser._id %>" class="delete-btn"><i class="far fa-trash-alt"></i></div>
            </div>
            <% } %>
            

        </div>
    <% }) %>
</div>
<script>
    const adminControls = document.getElementById('adminControls');
    const adminControlsKeyIcon = document.getElementById('adminControlsKeyIcon');
    const searchBar = document.querySelector('#adminControlsTop input');
    const allSubUsers = document.querySelectorAll('.subUser');
    const promoteBtns = document.querySelectorAll('.promote-btn');
    const deleteBtns = document.querySelectorAll('.delete-btn');

    // Delete user
    deleteBtns.forEach(deleteBtn => {
        deleteBtn.addEventListener('click', async () => {
            if (confirm('Are you sure you would like to DELETE this user! This cannot be undone!')) {
                const userId = deleteBtn.getAttribute('data-user-id');
                const response = await fetch(`/home/deleteuser`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        userId,
                        userID,
                        device: window.navigator.userAgent,
                    }),
                });
                const resJSON = await response.json();
                if (resJSON.status == 'success') {
                    alert(`Username: ${resJSON.username} has successfully been deleted!`);
                } else {
                    alert(`WARNING: Unseccessful`);
                }
            }
        })
    })

    // Promote user
    promoteBtns.forEach(promoteBtn => {
        promoteBtn.addEventListener('click', async () => {
            if (confirm('Are you sure you would like to promote this user?')) {
                const userId = promoteBtn.getAttribute('data-user-id');
                const response = await fetch(`/home/promote`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        userId,
                        userID,
                        device: window.navigator.userAgent,
                    }),
                });
                const resJSON = await response.json();
                if (resJSON.status === 'success') {
                    if (resJSON.promoteOrDemote == 'promote') {
                        alert(`Username: ${resJSON.username} was successfully promoted!`);
                    } else if (resJSON.promoteOrDemote == 'demote') {
                        alert(`Username: ${resJSON.username} was successfully demoted!`);
                    }
                    
                } else {
                    alert('WARNING! Unseccessful!');
                }
            }
        })
    })


    searchBar.addEventListener('keyup', (e) => {
        allSubUsers.forEach(subUser => {
            if (!subUser.innerText.toLowerCase().includes(e.target.value.toLowerCase())) {
                subUser.style.display = 'none';
            } else {
                subUser.style.display = 'flex';
            }
        })
    })

    adminControlsKeyIcon.addEventListener('click', () => {
        adminControls.classList.toggle('active');
    })
</script>
<style>
    #adminControls {
        color: white;
        position: fixed;
        padding: 10px;
        bottom: 60px;
        right: 20px;
        height: 600px;
        width: 400px;
        background-color: #303030;
        border-radius: 10px;
        border: 2px solid rgb(44, 44, 44);
        z-index: 20;
        clip-path: circle(7% at 91% 93%);
        transition: clip-path 0.3s ease;
        box-shadow: 2px 2px 5px black;
    }
    #adminControls.active {
        clip-path: circle(75%);
    }
    #adminControlsTop {
        display: flex;
        height: 80px;
        justify-content: space-between;
        align-items: center;
        margin: 0 10px;;
    }
    #adminControlsTop h2 {
        margin-right: 10px;
    }
    #adminControlsTop input {
        background-color: rgba(61, 61, 61, 0.5);
        border-radius: 5px;
        height: 30px;
        width: 200px;
        border: none;
        padding: 5px;
        color: rgb(129, 129, 129);
        font-size: 15px;
        outline: none;
    }
    #adminControlsKeyIcon {
        position: absolute;
        bottom: 1.5%;
        right: 1.5%;
        height: 10%;
        width: 15%;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 30px;
        color: white;
        cursor: pointer;
        transform: rotate(135deg);
    }
    .subUser {
        display: flex;
        width: 100%;
        
        position: relative;
    }
    .subUser h3 {
        font-size: 20px;
        margin-right: 8px;

    }
    .subUser a {
        font-size: 20px;
        color: white;
    }
    .subUser .manage-btns {
        position: absolute;
        top: 50%;
        right: 20px;
        transform: translateY(-50%);
        height: 95%;
        display: flex;
        justify-content: space-between;
        width: 20%;

    }
    .subUser .manage-btns .promote-btn,
    .subUser .manage-btns .delete-btn {
        height: 100%;
        width: 45%;
        border: 1px solid grey;
        border-radius: 2px;
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
    }

    @media screen and (max-width: 450px) {
        #adminControls {
            height: 450px;
            width: 300px;
        }
        #adminControlsKeyIcon {
            font-size: 20px;
        }
        #adminControlsTop {
            height: 60px;
        }       
        #adminControlsTop h2 {
            font-size: 15px;
        }
        #adminControlsTop input {
            height: 30px;
            width: 160px;
            font-size: 12px;
        }
        
    }

    @media screen and (max-width: 340px) {
        #adminControls {
            height: 390px;
            width: 260px;
        }

        #adminControlsTop {
            height: 60px;
        }       
        #adminControlsTop h2 {
            font-size: 15px;
        }
        #adminControlsTop input {
            height: 20px;
            width: 100px;
        }
    }
</style>