<div id="sideNavBar" class="b-back">
  <i id="openMenu" class="fas fa-bars"></i>
  <div id="logoutBtn">
    <i class="fas fa-sign-out-alt d"></i>
  </div>
  <div id="conversationsBtn" class="d-back sb-i">
    <i class="fas fa-comment b"></i>
    <i id="messageNotiIcon" class="fas fa-circle"></i>
  </div>
  <div id="searchBtn" class="d-back sb-i">
    <i class="fas fa-search b"></i>
  </div>
  <div id="homeBtn" class="d-back sb-i">
    <i class="fas fa-home b"></i>
  </div>
  <div id="createBtn" class="d-back sb-i">
    <i class="fas fa-plus b"></i>
  </div>

  <div class="fill-space">
  </div>

  <div id="profileBtn">
    <img
      src="<% if (user.profileImg === 'none') { %>
       /images/profilePlaceholder.svg
      <% } else {  %>
        <%= user.profileImg %> 
      <% } %> "
      height="40px"
      width="40px"
      alt="Profile Btn"
      style="border-radius: 50%; background-color: #2e2e2e; object-fit: cover;"
    />
  </div>
</div>
<style>
  #sideNavBar {
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 50px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    transition: transform 0.3s ease;
    z-index: 10;
  }

  .sb-i,
  .fill-space {
    height: 45px;
    width: 45px;
    margin: 10px 2.5px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    position: relative;
    border-radius: 50%;
  }

  .fill-space  {
    cursor: default;
  }

  #conversationsBtn::after {
      content: 'Messages';
  }
  #searchBtn::after {
      content: 'Search';
  }
  #homeBtn::after {
      content: 'Home';
  }
  #createBtn::after {
      content: 'Create';
  }

  .sb-i::after {
    clip-path: circle(26% at 0 50%);
    transition: clip-path 0.5s ease;
    pointer-events: none;

    position: absolute;
    z-index: -1;
    left: 50%;
    height: 100%;
    width: fit-content;
    font-size: 20px;
    background-color: inherit;
    padding-left: 35px;
    padding-right: 10px;
    border-radius: 0 9999px 9999px 0;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .sb-i:hover::after {
    clip-path: circle(75%);
    pointer-events: all;
  }

  #profileBtn {
    position: absolute;
    height: 50px;
    width: 50px;
    bottom: 50px;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;

  }
  #logoutBtn {
    position: fixed;
    top: 5px;
    left: 25px;
    transform: translateX(-50%);
    font-size: 20px;
    z-index: 1;
    cursor: pointer;
    height: 50px;
    width: 50px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: white;
  }
  #openMenu {
    position: absolute;
    top: 20px;
    left: 75px;
    transform: translateX(-50%);
    cursor: pointer;
    color: black;
    font-size: 20px;
    display: none;
  }

  #messageNotiIcon {
    display: none;
    position: absolute;
    top: 24%;
    right: 24%;
    font-size: 10px;
    color: rgb(62, 255, 95);
    text-shadow: rgb(0, 184, 31) 0 0 5px;
  }

  @media screen and (max-width: 500px) {
    #sideNavBar {
      transform: translateX(-100%);
    }
    #sideNavBar.active {
      transform: translateX(0);
    }
    #openMenu {
      display: inline-block;
    }
    /* #profileBtn {
      bottom: 180px;
    } */
  }

  @media screen and (max-height: 450px) {
    #searchBtn,
    #homeBtn,
    #createBtn,
    #conversationsBtn,
    .fill-space {
      height: 40px;
      width: 50px;
      margin: 1px 0;


    }  
  }
</style>
<script>
  let userID = '';
  document.cookie.split(';').forEach(el => {
      if (el.includes('auth-token')) {
          userID = JSON.parse(atob(el.split('=')[1].split('.')[1]))._id;
      }
  });

  let socket;
  if (typeof io !== 'undefined') {
      socket = io();
      socket.emit('joinUserRoom', { userID });
  }
  

  const logoutBtn = document.getElementById('logoutBtn');
  const conversationsBtn = document.getElementById('conversationsBtn');
  const homeBtn = document.getElementById('homeBtn');
  const createBtn = document.getElementById('createBtn');
  const profileBtn = document.getElementById('profileBtn');
  const openMenu = document.getElementById('openMenu');
  const sideNavBar = document.getElementById('sideNavBar');
  const messageNotiIcon = document.getElementById('messageNotiIcon');


  if (typeof socket !== 'undefined') {

    socket.on('updateConversationsWithMessage', ({messageData, conversationID, usersIds: usersIdsInChat}) => {
      if (messageData.sender != userID && !usersIdsInChat.includes(userID)) {
        messageNotiIcon.style.display = 'block';
      }
    });

    socket.on('addedConvo', () => {
      messageNotiIcon.style.display = 'block';
    });

  } else {
    console.error('Socket not defined in navBarFile');
  }

  // setInterval(async () => {
  //     await checkMessageNotis();
  // }, 3000);
  

  openMenu.addEventListener('click', () => {
    sideNavBar.classList.toggle('active');
    openMenu.classList.toggle('fa-bars');
    openMenu.classList.toggle('fa-times');
  });

  conversationsBtn.addEventListener('click', () => {
    window.location.href = '/messages';
  })

  searchBtn.addEventListener('click', () => {
    window.location.href = '/search';
  });
  homeBtn.addEventListener('click', () => {
    window.location.href = '/home';
  });
  createBtn.addEventListener('click', () => {
    window.location.href = '/create';
  });

  profileBtn.addEventListener('click', () => {
    window.location.href = `/account/<%= user.username %>`;
  });

  // Logout
  logoutBtn.addEventListener('click', async () => {
    try {
      const response = await fetch('/home/logout', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          id: userID,
        }),
      });
      const resJSON = await response.json();
      if (resJSON.status === 'logged out') {
        window.location.href = '/';
      } else {
        alert('An Error Occured');
      }
    } catch (err) {
      console.error(err);
    }
  });
</script>
