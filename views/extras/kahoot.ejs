<!DOCTYPE html>
<html lang="en">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Kahoot!</title>
    <link rel="icon" href="/images/bookmarkScripts/kahootIcon.png">
    <style>
        body {
            overflow-x: hidden;
        }
        #inputs {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }
        #inputs > input,
        button,
        #inputs > #delay {
            height: 50px;
            width: 500px;
            margin: 10px;
            border-radius: 5px;
            padding: 10px;
            font-size: 20px;
        }
        #inputs > #uuid {
            color: rgb(0, 179, 24);
        }
        #inputs > img {
            width: 600px;
        }
        #inputs > p.bottom {
            margin-bottom: 100px;
            font-weight: bold;
            font-size: 15px;
        }
        #search {
            width: 100%;
            height: 100%;
            background-color: white;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            position: absolute;
            top: 0;
            left: 100%;
            transition: transform 0.3s ease;
        }
        #search.active {
            transform: translateX(-100%);

        }
        #search > input {
            width: 90%;
            height: 50px;
            margin: 10px;
            border-radius: 5px;
            padding: 10px;
            font-size: 20px;

        }
        #searchResults {
            width: 100%;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
        }
        #search > #searchResults > .card {
            width: 90%;
            border: 2px solid black;
            border-radius: 10px;
            margin: 10px;
            padding: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
        }
        #search > #searchResults > .card:hover {
            background-color: #f2f2f2;
            box-shadow: 0px 2px 10px #000000;
            transform: translateY(-5px);
        }
        .card > .card-title {
            font-size: 20px;
            font-weight: bold;
            width: 100%;
            text-align: center;

        }
        .card > .card-desc {
            font-size: 15px;
            width: 100%;
            text-align: center;
        }
        .card > .card-uuid {
            font-size: 15px;
            font-weight: bold;
            width: 100%;
            text-align: center;
        }
        .card > .card-cover {
            width: 100%;
            height: 100px;
            object-fit: contain;
        }
        .card > .card-number-questions {
            font-size: 15px;
            font-weight: bold;
            width: 100%;
            text-align: center;
        }
        .card > .card-author {
            font-size: 15px;
            font-weight: bold;
            width: 100%;
            text-align: center;

        }
        #openSearch, #goBack {
            color: blue;
            font-size: 20px;
            text-decoration: underline;
            cursor: pointer;
        }

        @media screen and (max-width: 650px) {
            #inputs > input, #inputs > button, #inputs > img, #inputs > #delay {
                width: 95%;
                font-size: 15px;
            }
        }
    </style>
</head>

<body>
    <div id="inputs">
        <input id="code" type="text" placeholder="PIN ex. 123456">
        <input id="name" type="text" placeholder="NAME ex. DCmax1k">
        <input id="bots" type="number" placeholder="# of bots">
        <input id="delay" type="number" placeholder="ex. 3 (Max delay in seconds) Prevents cheat detection">
        <input id="uuid" type="text" placeholder="QuizID (optional) ex. 4cdd8eb5-ce35-4368-a43b-a3c1d15b7430">
        <img src="/images/kahootQuizIdPreview.png" alt="quizIdPreview">
        <p id="openSearch">Don't want to type it out? Click here to search for it!</p>
        <p class="bottom">The quiz ID is optional, but it is NEEDED if you want the bot(s) to pick the CORRECT answers!</p>
        <button style="cursor: pointer;" id="submitBtn">Submit</button>
    </div>

    <div id="search">
        <input id="searchInput" type="search" placeholder="Search for kahoot...">
        <p id="goBack">Go back</p>
        <div id="searchResults">


        </div>
    </div>

  <script>
    const code = document.getElementById('code');
    const name = document.getElementById('name');
    const bots = document.getElementById('bots');
    const uuid = document.getElementById('uuid');
    const delay = document.getElementById('delay');
    const inputs = document.getElementById('inputs');
    const submit = document.getElementById('submitBtn');
    const openSearch = document.getElementById('openSearch');
    const goBack = document.getElementById('goBack');
    const search = document.getElementById('search');
    const searchInput = document.getElementById('searchInput');

    let alreadyClicked = false;
    submitBtn.addEventListener('click', async () => {
        if (code.value && name.value && bots.value) {
            if (alreadyClicked) {
                return;
            }
            alreadyClicked = true;
            submitBtn.style.cursor = 'not-allowed';
            if (parseInt(bots.value) > 100) {
                alert('For Socialents\' server\'s, we only sent 100 bots... You wouldn\'t want to break Socialent now, would you?');
            }
            const response = await fetch('https://appextras.herokuapp.com//kahoot/joingame', {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    pin: code.value,
                    name: name.value,
                    bots: bots.value,
                    uuid: uuid.value,
                    delay: delay.value ? delay.value : 0,
                }),
            });
            const data = await response.json();
            alert(data.status);
            if (data.status != 'DONE!') {
                alreadyClicked = false;
                submitBtn.style.cursor = 'pointer';
                alert('An error occurred...')
            }
        } else {
            alert('Please fill out all required fields!');
        }
    });

    openSearch.addEventListener('click', () => {
        search.classList.add('active');
    });
    goBack.addEventListener('click', () => {
        search.classList.remove('active');
    });

    const clickedCard = (givenuuid) => {
        search.classList.remove('active');
        uuid.value = givenuuid;
    }

    searchInput.addEventListener('keyup', async (e) => {
        if (e.key == 'Enter') {
            const response = await fetch('https://appextras.herokuapp.com//kahoot/searchuuid', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    query: searchInput.value,
                }),
            });
            const data = await response.json();
            if (data.status == 'success') {
                searchResults.innerHTML = '';
                data.kahoots.forEach(result => {
                    const card = document.createElement('div');
                    card.classList.add('card');
                    card.addEventListener('click', () => {clickedCard(result.uuid)});
                    card.innerHTML = `
                        <div class="card-title">${result.title}</div>
                        <div class="card-number-questions">${result.numberOfQuestions} Questions</div>
                        <div class="card-desc">${result.description}</div>
                        <div class="card-uuid">UUID: ${result.uuid}</div>
                        <img class="card-cover" src="${result.cover}">
                        <div class="card-author">Made by, ${result.author}</div>
                    `;
                    searchResults.appendChild(card);
                });
            } else {
                alert('An error occurred...');
            }
        }
    });


  </script>

</body>

</html>